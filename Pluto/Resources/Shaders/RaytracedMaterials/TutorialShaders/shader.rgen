#version 460
#extension GL_NV_ray_tracing : require
#define RAYTRACING

#include "Pluto/Resources/Shaders/Descriptors.hxx"

layout(location = 0) rayPayloadNV HitInfo payload;

void main() 
{
    const vec2 pixelCenter = vec2(gl_LaunchIDNV.xy) + vec2(0.5);
    const vec2 inUV = pixelCenter/vec2(gl_LaunchSizeNV.xy);

    vec4 N = imageLoad(normal_image, ivec2(gl_LaunchIDNV.xy));
    vec4 P = imageLoad(position_image, ivec2(gl_LaunchIDNV.xy));
    vec4 C = imageLoad(render_image, ivec2(gl_LaunchIDNV.xy));

    const vec3 origin = vec3(P.x, P.y, P.z);
    const vec3 direction = vec3(N.x, N.y, N.z);

    // const uint cullMask = 0xFF;
    // const uint sbtRecordOffset = 0;
    // const uint sbtRecordStride = 0;
    // const uint missIndex = 0;
    // const float tmin = 0.0f;
    // const float tmax = 10000.0f;
    // const int payloadLocation = 0;

    // traceNV(topLevelAS,
    //          rayFlags,
    //          cullMask,
    //          sbtRecordOffset,
    //          sbtRecordStride,
    //          missIndex,
    //          origin,
    //          tmin,
    //          direction,
    //          tmax,
    //          payloadLocation);

    // uint rayFlags = gl_RayFlagsOpaqueNV;
    uint rayFlags = gl_RayFlagsNoneNV;
    uint cullMask = 0xff;
	float tmin = .001;
    float tmax = 200000.0;

    traceNV(topLevelAS, rayFlags, cullMask, 0, 0, 0, origin.xyz, tmin, direction.xyz, tmax, 0);

    imageStore(render_image, ivec2(gl_LaunchIDNV.xy), C + payload.color);
}